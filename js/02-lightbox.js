import { galleryItems } from './gallery-items.js';
// Зроби таку саму галерею як в першому завданні, але використовуючи бібліотеку SimpleLightbox, яка візьме на 
//себе обробку кліків по зображеннях, відкриття і закриття модального вікна,
// а також гортання зображень за допомогою клавіатури.
// Виконуй це завдання у файлах 02-lightbox.html і 02-lightbox.js. Розбий його на декілька підзавдань:
// 1. Створення і рендер розмітки на підставі масиву даних galleryItems і наданого шаблону елемента галереї. 
// Використовуй готовий код з першого завдання.
// 2. Підключення скрипту і стилів бібліотеки, використовуючи CDN сервіс cdnjs. Необхідно додати посилання на два файли: 
// simple-lightbox.min.js і simple-lightbox.min.css.
// 3. Ініціалізація бібліотеки після створення і додання елементів галереї у ul.gallery. 
// Для цього ознайомся з документацією SimpleLightbox - насамперед секції «Usage» і «Markup».
// 4. Подивися в документації секцію «Options» і додай відображення підписів до зображень з атрибута alt. 
// Нехай підпис буде знизу і з'являється через 250 мілісекунд після відкриття зображення.

// Change code below this line
const galleryContainer = document.querySelector('.gallery');
//Метод reduce(callback, initialValue) використовується для послідовної обробки кожного елемента масиву із збереженням проміжного результату, 
//як акумулятор. Трохи складніший за інші методи для засвоєння, але результат вартий того.
// - Не змінює оригінальний масив.
// - Поелементо перебирає оригінальний масив.
// - Повертає все, що завгодно.
// - Робить все, що завгодно.

// 1. const markup = galleryItems.reduce(...): Тут створюється змінна markup, яка міститиме підсумковий рядок HTML-розмітки.
// 2. galleryItems.reduce(...): Цей код використовує метод reduce для ітерації за масивом galleryItems. reduce приймає функцію зворотного виклику 
// та початкове значення (в даному випадку порожній рядок '').
// 3. Функція зворотного виклику (acc, {original, preview, description}) => ...: Це стрілочна функція, яка приймає два аргументи: 
// acc (акумулятор) та об'єкт з полями original, preview, та description з масиву galleryItems.
// 4. Всередині функції зворотного виклику виконується конкатенація (складання) поточного рядка acc з HTML-розміткою для кожного 
// елемента масиву галереї.
// 5. HTML-розмітка, що генерується всередині функції зворотного виклику, створює елемент <li> (список), який містить посилання <a> з атрибутом href,
//  що вказує на original з об'єкта galleryItems. Усередині цього посилання знаходиться зображення <img>, 
//  атрибути src та alt якого встановлюються на preview та description відповідно.
// 6. В результаті виконання функції reduce, змінна markup буде містити рядок HTML-розмітки для кожного елемента масиву галереї, 
// об'єднаних в один великий рядок.
const markup = galleryItems.reduce(
    (acc, {original, preview, description}) =>
    (acc += 
        `<li>
            <a class = "gallery__item" href = "${original}">
                <img 
                    class = "gallery__image"
                    src = "${preview}"
                    alt="${description}"
                />
            </a>
        </li>`),
        ''
);

galleryContainer.insertAdjacentHTML('beforeend', markup);

// 1. const lightbox = new SimpleLightbox('.gallery a', {...});: Тут створюється новий об'єкт SimpleLightbox, 
// і його екземпляр зберігається в змінній lightbox.
// 2. '.gallery a': Це селектор CSS, який визначає, які елементи на веб-сторінці будуть представляти зображення, 
// з якими працюватиме бібліотека SimpleLightbox. В даному випадку це вибирає всі посилання <a> всередині елемента з класом .gallery.
// 3. {...}: Всередині фігурних дужок розміщуються параметри конфігурації для об'єкта SimpleLightbox.
// - captionsData: 'alt': Ця опція вказує, що дані з атрибута alt кожного зображення будуть використовуватися як підписи (заголовки) 
// до зображень у галереї. Таким чином, текст з атрибута alt відображатиметься поряд із зображенням, коли воно буде збільшено у лайтбоксі.
// - captionDelay: 250: Ця опція визначає затримку (у мілісекундах) перед відображенням підписів (заголовків) до зображень після того, 
// як зображення буде збільшено в лайтбоксі. У цьому випадку затримка становить 250 мілісекунд.
const lightbox = new SimpleLightbox('.gallery a', {
  captionsData: 'alt',
  captionDelay: 250,
});

